The following HTML code represents what I consider to be perfect documentation for a function or method that is found within the Trongate framework:    ---    


<div class="container">
  <h1>get()</h1>
  <p class="signature">public function get(): void</p>
  <h2>Description</h2>
  <div class="description">
    <p>
      This method is typically utilized by Trongate's API manager to process HTTP GET requests to API endpoints. Its usage is contingent upon appropriate endpoint settings and corresponding authorization rules defined within a file named <code>api.json</code>. This file is expected to reside within the 'assets' subdirectory of a module directory that shares the same name as the target database table.
    </p>
  </div>
  <h2>Parameters</h2>
  <table>
    <thead>
      <tr>
        <th>Parameter</th>
        <th>Type</th>
        <th>Description</th>
        <th>Default</th>
        <th>Required</th>
      </tr>
    </thead>
    <tbody>
      <!-- This method does not take any parameters -->
      <tr>
        <td colspan="5">This method does not take any parameters.</td>
      </tr>
    </tbody>
  </table>
  <h2>Return Value</h2>
  <table>
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>void</td>
        <td>This method does not return any value.</td>
      </tr>
    </tbody>
  </table>
  <h2>Example Usage</h2>
  <div class="example">
    <pre>// Example Usage not available for this method</pre>
  </div>
</div>.  --- What I've just shown you can be considered as being good HTML documentation for the following method:   ---   

    /**
     * Handle GET requests for API endpoints.
     *
     * @return void
     */
    public function get(): void {
        $request_type = $_SERVER['REQUEST_METHOD'];

        if ($request_type !== 'GET') {
            $this->search();
            return;
        }

        require_once('Standard_endpoints.php');
        $se = new Standard_endpoints();

        if (is_numeric(segment(4))) {
            $se->find_one();
        } else {
            $se->get();
        }
    }


---    Please produce some HTML content of the same format as shown above, but for the following function/method.  PLEASE NOTE:  The method shown is typically used by Trongate's API manager.  Usage of the method is dependant upon appropriate endpoint settings and their corresponding authorisation rules being defined within a file named api.json.  This file should exist within the 'assets' sub directory of a module directory that shares the same name as the target database table name.  The conditions of usage that I have described are applicable to the method below.  If you can, please try to avoid copying what I have just written.  I would like you to write in a manner that is professional and suitable for technical documentation - :    ---    






    /**
     * Handle search by POST requests for API endpoints.
     *
     * @return void
     */
    public function search(): void {
        require_once('Standard_endpoints.php');
        $se = new Standard_endpoints();
        $se->search();
    }